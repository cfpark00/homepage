# Project Structure Overview
Last Updated: 2025-08-23

## Root Directory: /Users/cfpark00/mysite
Monorepo using pnpm workspaces with Vercel deployment

## Key Directories

### /apps/web/
Main Next.js application

#### /app/(default)/
- blog/
  - page.tsx - Blog listing page
  - [slug]/page.tsx - Individual blog post page (uses MDX from content)
- cv/
  - page.tsx - CV page (hardcoded data)
- news/
  - page.tsx - News listing page (uses content/news JSON)
- projects/
  - page.tsx - Projects page (server component, loads from metadata.json)
  - [slug]/page.tsx - Individual project page (uses MDX from content)
- publications/
  - page.tsx - Publications listing page (uses lib/publications-data.ts)
- research-tools/
  - page.tsx - Research tools page (hardcoded data)
- talks/
  - page.tsx - Talks listing page (uses lib/talks-data.ts)
- page.tsx - Home page (hardcoded)

#### /lib/
- blog.ts - Blog loader (reads from content/blog/metadata.json)
- news.ts - News loader (reads from content/news JSON files)
- projects.ts - Projects loader (reads from content/projects/metadata.json)
- publications-data.ts - Publications data (TypeScript, includes related_projects)
- talks-data.ts - Talks data (TypeScript)

#### /content/
- blog/
  - metadata.json - Blog post metadata (single source of truth)
  - random-walks-visualization/
    - index.mdx
    - random-walk.tsx (co-located interactive component)
  - welcome-to-my-blog/
    - index.mdx
- projects/
  - metadata.json - Project metadata (title, excerpt, thumbnailUrl, isExternal, externalUrl)
  - evolving-research/
    - index.mdx
  - research-tracking/
    - index.mdx
    - research-flow.tsx (co-located React Flow diagram)
    - research-tree-data.ts (co-located data model)
    - research-tree-vertical.json (co-located data)
- news/
  - YYYY/ (2015-2025)
    - 0winter.json (Jan-Mar)
    - 1spring.json (Apr-Jun)
    - 2summer.json (Jul-Sep)
    - 3fall.json (Oct-Dec)
- projects/
  - research-tracking/
    - index.mdx
    - research-flow.tsx
  - evolving-research/
    - index.mdx

#### /components/
- mdx-content.tsx - Dynamic MDX loader (uses Next.js dynamic imports)
- share-button.tsx - Copy link button with toast notifications
- google-analytics.tsx
- publication-card.tsx - Domain wrapper around ArticleCard (supports related_projects)
- project-cards.tsx - Client component for project grid with external link handling
- cv-timeline.tsx
- cv-traditional.tsx
- flying-publications.tsx
- navigation.tsx - Site navigation (Projects instead of Ongoing)
- theme-provider.tsx

### /packages/ui/
Shared UI component library
- components/
  - article-card.tsx - Generic article/publication card
  - card.tsx
  - badge.tsx
  - button.tsx
  - page-container.tsx
  - etc.

### /archive/
Archived/unused files
- unused-code/
  - chat-box.tsx (unused component, only in commented code)
  - research-tools/ (orphaned page directory, not linked anywhere)

### /claude_notes/
AI assistant documentation and logs
- docs/
  - blog-system-architecture.md
- logs/
  - YYYY-MM-DD/
    - HH-MM_topic.md
- tips/
  - typescript-in-mdx-gotchas.md
- structure.txt (this file)

### /resources/
Static assets and data
- research-tree.json
- research-tree-vertical.json

## Configuration Files
- package.json (root)
- pnpm-workspace.yaml
- turbo.json
- vercel.json
- CLAUDE.md - AI assistant guidelines
- DEPLOYMENT.md
- SHADCN_TIPS.md
- .env.example

## Content Management Systems

### Blog System (3-layer architecture)
1. Framework: /blog/[slug]/page.tsx
2. Content: /content/blog/*/index.mdx
3. Metadata: /lib/blog.ts

### Projects System (3-layer architecture)
1. Framework: /projects/[slug]/page.tsx
2. Content: /content/projects/*/index.mdx
3. Metadata: /lib/projects.ts

### News System (2-layer architecture)
1. Framework: /news/page.tsx
2. Content: /content/news/YYYY/*.json

## Key Differences from Blog
- Projects don't have tags or reading time
- Projects use the same MDX framework as blogs
- Projects content wrapped in prose classes (requires not-prose for components)

## Build & Deploy
- Platform: Vercel
- Build: Turborepo
- Package Manager: pnpm
- Framework: Next.js 15+ (App Router with async params)